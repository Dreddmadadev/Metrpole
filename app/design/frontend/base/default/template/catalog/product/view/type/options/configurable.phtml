<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2017 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
$confLabelAttribut = array();
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <dl>
        <?php foreach($_attributes as $_attribute): ?>
            <dd<?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?>>
                <?php $label = $_attribute->getLabel() ?>
                <?php $confLabelAttribut['attribute'+$_attribute->getAttributeId()] = $this->__('%s ...', $label) ?>
                <div class="input-box">
                    <label class="attribute-label" for="attribute<?php echo $_attribute->getAttributeId() ?>"><?= $label ?> :</label>
                    <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                        <option><?php echo $this->__('%s ...', $label) ?></option>
                    </select>
                </div>
            </dd>
        <?php endforeach; ?>
    </dl>
    <?php
    $conf_init = $this->getJsonConfig();
    $conf = str_replace("Choisissez une option...","".reset(json_decode($conf_init)->{'attributes'})->{'label'}." ...", $conf_init);
    $conf = Zend_Json::decode($conf);
    $conf = array_merge($conf, array("labelsAttribute" => $confLabelAttribut));
    $conf = Zend_Json::encode($conf);
    ?>
    <script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $conf ?>);
    </script>
<?php endif;?>
